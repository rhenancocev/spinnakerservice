apiVersion: spinnaker.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker
spec:
  spinnakerConfig:
    config:
      version: $SPINNAKER_VERSION   # the version of Spinnaker to be deployed
      persistentStorage:
        persistentStoreType: s3
        s3:
          bucket: $S3_BUCKET # Change to a unique name. Spinnaker stores application and pipeline definitions here
          rootFolder: front50
          region: $AWS_REGION
          accessKeyId: $AWS_ACCESS_KEY_ID
          secretAccessKey: $AWS_SECRET_ACCESS_KEY
      deploymentEnvironment:
        sidecars:
          spin-clouddriver:
          - name: token-refresh
            dockerImage: quay.io/skuid/ecr-token-refresh:latest
            mountPath: /etc/passwords
            configMapVolumeMounts:
            - configMapName: token-refresh-config
              mountPath: /opt/config/ecr-token-refresh
      features:
        artifacts: true
      artifacts:
        github:
          enabled: true
          accounts:
          - name: $GITHUB_USER
            token: $GITHUB_TOKEN  # GitHub's personal access token. This fields supports `encrypted` references to secrets.
      providers:
        dockerRegistry:
          enabled: true
        kubernetes:
          enabled: true
          accounts:
          - name: spinnaker-workshop
            requiredGroupMembership: []
            providerVersion: V2
            permissions:
            dockerRegistries:
              - accountName: my-ecr-registry
            configureImagePullSecrets: true
            cacheThreads: 1
            namespaces: [spinnaker,detail]
            omitNamespaces: []
            kinds: []
		    omitKinds: []
            customResources: []
            cachingPolicies: []
            oAuthScopes: []
            onlySpinnakerManaged: false
            kubeconfigFile: kubeconfig-sp  # File name must match "files" key
          primaryAccount: spinnaker-workshop  # Change to a desired account from the accounts array
      profiles:
        clouddriver:
          dockerRegistry:
            enabled: true
            primaryAccount: my-ecr-registry
            accounts:
            - name: my-ecr-registry
              address: https://$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
              username: AWS
              passwordFile: /etc/passwords/my-ecr-registry.pass
              trackDigests: true
              repositories:
              - $ECR_REPOSITORY
      igor:
        docker-registry:
          enabled: true
      files:
        kubeconfig-sp: |
            apiVersion: v1
            clusters:
            - cluster:
                certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNekl3TVRJek9Gb1hEVE15TURZeU1ESXdNVEl6T0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS1VKCmcxbjhLcHRpclJERmYxWHNGdkZTNXBvM2tRU3pKN28rc0N2b1M2MGpGTjl5K3lyUEVBMzFJWitzTXpNamJZWWwKS3RiempzL01GeFVJSTJ3YmNab0xlS2VJL2NnSU5pS3BGdEg3K2pOamZxcDkvTXJCRllWNWVkeldoWTlkL3BmVQpIc1NXV3kwVHVXUkRTdzJUZUtyRHVtSTEyclRQZDBNSXVHQlpCRDFEdUEvK0EyMEEzNmFmeXo1NjZ0WUhUTkNtCkozNnkzQnVNVFlKRlI1OWY4RnFZQmEycmpYL0JCT0YrditITjg0MjFRN2xjbkNIbEExWjRYQllmald4akI3b2gKYTM2YUhzb0xpNzN4RG4wTVdPRU5FSWhBVG1DNnR2Z3YvSTA3Zkd0VzJ2Wi9OS0VpY2dZSzhDT0x2QjVoK0ovNwpNRnBIUG1oRXBLOE1RSSt3V1lrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNdE1TeG5rSmhqMkZWTDRKOFc1V2VjR0pBSXBNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdEh1Mlg2ZnZkWHRmN0pMbWpiV3lkKzRWcEMrU0VzZW9BZGVDQ1FHMlg0cHR0OHBYcQpIc0Zsdk1USjB5ZVovaHVwaXV2N0VIRE40Y3dlMTlqdGJnTVpMTldkRmxaNStDZUdMMDM0Y3NFTk10a0NxN1A3CmJmUUtsM05YazVkeVB4NU90UXlNaXk5ZUhKU0ZRQVRGQWhRVUc0UFJHM01pQ2lNSU01U290TFRGM2tJRkhHbEgKRHBZdjRCakNLdlVuV0w5Qnd5TnN0ekZDSkdWZUFXeGRFWmpnUkQrZlR1NXBpcGFqV1NCMFV3bW9LYkZLWUhwSgpKK1ZnMVJ5S1lFY3loclUxbXRVc1pPRGRWbnU4cGUwaEFFallvNGdQa0ZINnIxNnZHYk14RXBRZUtGRVZaU3JRCkg4Z1ZFSTNybGpDS1Z2YTczb2pocVhodWJlS200eEx3UXNTRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                server: https://2DE2A9C3C6300BBB8E5F64A6F9C55B8A.gr7.us-east-1.eks.amazonaws.com
              name: arn:aws:eks:us-east-1:305410715763:cluster/eksworkshop-eksctl
            contexts:
            - context:
                cluster: arn:aws:eks:us-east-1:305410715763:cluster/eksworkshop-eksctl
                namespace: spinnaker
                user: spinnaker-token-user
              name: spinnaker
            current-context: spinnaker
            kind: Config
            preferences: {}
            users:
            - name: spinnaker-token-user
              user:
                token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjRHc0U4UWtIajIzcTd1WDR0Q2xlMFlXX1lyYUlTQnN1LXVuQ0NSdmlPNFUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJzcGlubmFrZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoic3Bpbm5ha2VyLXdzLXNhLXRva2VuLXdxNXpoIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InNwaW5uYWtlci13cy1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImZjMjczZmRkLTU5NDctNDg1My1hNTAxLWUwMmZlNjY5MTg2NyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpzcGlubmFrZXI6c3Bpbm5ha2VyLXdzLXNhIn0.lxZqSdHJirdzyNBlbCIUzfIPWjhWZLwhWZp1OMFy_jrW2gkYBabUUlcvww7bepT5uSHYn0OTj2Ux7xeMFGOU6XNFXhSCQBvB2Qg8Bu09rfMkAIi_0zkhP0zil25T0Jx_J6BT-kTUtVAvDnYDgPatT-IEzlV4qzBcEf1Uk7Fm97C9iRCG85LM8zz_oWoCh2c_qP_fI2gDohbPGNl4XO2LcFQdrEOHI8ozUheCwurZQHRXx_ui18JyyGrER9STbTNwqFnh5vtpZgSM6yFUshR66rX3i9Mg6opLJXmavnqvXgGn7mg-n2untyPdC9ExKIdrdg4rTidfM8A_OH-UNg4PDw
  # spec.expose - This section defines how Spinnaker should be publicly exposed
  expose:
    type: service  # Kubernetes LoadBalancer type (service/ingress), note: only "service" is supported for now
    service:
      type: LoadBalancer